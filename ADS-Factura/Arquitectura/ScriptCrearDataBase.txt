-- ========================================
-- BASE DE DATOS
-- ========================================
CREATE DATABASE IF NOT EXISTS facturacion_electronica
  CHARACTER SET utf8mb4
  COLLATE utf8mb4_general_ci;

USE facturacion_electronica;

-- ========================================
-- TABLAS EMPRESA Y CLIENTE
-- ========================================
CREATE TABLE EMPRESA (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nit VARCHAR(20) NOT NULL UNIQUE,
    razon_social VARCHAR(255) NOT NULL,
    direccion VARCHAR(255),
    regimen VARCHAR(100)
);

CREATE TABLE CLIENTE (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nit VARCHAR(20) NOT NULL,
    razon_social VARCHAR(255) NOT NULL,
    direccion VARCHAR(255),
    email VARCHAR(150)
);

-- ========================================
-- TABLAS RESOLUCIÓN Y CERTIFICADO
-- ========================================
CREATE TABLE RESOLUCION_NUMERACION (
    id INT AUTO_INCREMENT PRIMARY KEY,
    empresa_id INT NOT NULL,
    prefijo VARCHAR(10) NOT NULL,
    rango_inicial INT NOT NULL,
    rango_final INT NOT NULL,
    fecha_inicio DATE NOT NULL,
    fecha_fin DATE NOT NULL,
    estado VARCHAR(50) NOT NULL,
    FOREIGN KEY (empresa_id) REFERENCES EMPRESA(id)
);

CREATE TABLE CERTIFICADO_DIGITAL (
    id INT AUTO_INCREMENT PRIMARY KEY,
    empresa_id INT NOT NULL,
    nombre_certificado VARCHAR(255) NOT NULL,
    serie VARCHAR(100) NOT NULL,
    fecha_inicio DATE NOT NULL,
    fecha_fin DATE NOT NULL,
    ubicacion VARCHAR(255) NOT NULL,
    FOREIGN KEY (empresa_id) REFERENCES EMPRESA(id)
);

-- ========================================
-- TABLAS FACTURACIÓN
-- ========================================
CREATE TABLE FACTURA (
    id INT AUTO_INCREMENT PRIMARY KEY,
    empresa_id INT NOT NULL,
    cliente_id INT NOT NULL,
    prefijo VARCHAR(10) NOT NULL,
    consecutivo INT NOT NULL,
    cufe VARCHAR(255) UNIQUE,
    subtotal DECIMAL(18,2) NOT NULL,
    impuestos DECIMAL(18,2) NOT NULL,
    total DECIMAL(18,2) NOT NULL,
    fecha_emision DATETIME NOT NULL,
    estado_dian VARCHAR(50),
    enlace_pdf VARCHAR(255),
    FOREIGN KEY (empresa_id) REFERENCES EMPRESA(id),
    FOREIGN KEY (cliente_id) REFERENCES CLIENTE(id)
);

CREATE TABLE FACTURA_LINEA (
    id INT AUTO_INCREMENT PRIMARY KEY,
    factura_id INT NOT NULL,
    producto VARCHAR(255) NOT NULL,
    cantidad DECIMAL(10,2) NOT NULL,
    precio_unitario DECIMAL(18,2) NOT NULL,
    impuestos DECIMAL(18,2),
    total DECIMAL(18,2),
    FOREIGN KEY (factura_id) REFERENCES FACTURA(id)
);

CREATE TABLE EVENTO_FACTURA (
    id INT AUTO_INCREMENT PRIMARY KEY,
    factura_id INT NOT NULL,
    tipo_evento VARCHAR(100) NOT NULL,
    fecha_evento DATETIME NOT NULL,
    usuario VARCHAR(100),
    payload JSON,
    FOREIGN KEY (factura_id) REFERENCES FACTURA(id)
);

CREATE TABLE NOTA_CREDITO (
    id INT AUTO_INCREMENT PRIMARY KEY,
    factura_id INT NOT NULL,
    cude VARCHAR(255) UNIQUE,
    total DECIMAL(18,2) NOT NULL,
    fecha_emision DATETIME NOT NULL,
    FOREIGN KEY (factura_id) REFERENCES FACTURA(id)
);

CREATE TABLE NOTA_DEBITO (
    id INT AUTO_INCREMENT PRIMARY KEY,
    factura_id INT NOT NULL,
    cude VARCHAR(255) UNIQUE,
    total DECIMAL(18,2) NOT NULL,
    fecha_emision DATETIME NOT NULL,
    FOREIGN KEY (factura_id) REFERENCES FACTURA(id)
);

CREATE TABLE RADIAN_REGISTRO (
    id INT AUTO_INCREMENT PRIMARY KEY,
    factura_id INT NOT NULL,
    estado VARCHAR(50),
    fecha_registro DATETIME NOT NULL,
    FOREIGN KEY (factura_id) REFERENCES FACTURA(id)
);

CREATE TABLE ENVIO_DIAN (
    id INT AUTO_INCREMENT PRIMARY KEY,
    factura_id INT NOT NULL,
    request_id VARCHAR(255),
    codigo_dian VARCHAR(50),
    mensaje TEXT,
    reintentos INT DEFAULT 0,
    latencia_ms DECIMAL(10,2),
    fecha_envio DATETIME NOT NULL,
    FOREIGN KEY (factura_id) REFERENCES FACTURA(id)
);

-- ========================================
-- TABLAS DOCUMENTO SOPORTE
-- ========================================
CREATE TABLE DOCUMENTO_SOPORTE (
    id INT AUTO_INCREMENT PRIMARY KEY,
    empresa_id INT NOT NULL,
    cliente_id INT NOT NULL,
    prefijo VARCHAR(10) NOT NULL,
    consecutivo INT NOT NULL,
    cude VARCHAR(255) UNIQUE,
    subtotal DECIMAL(18,2) NOT NULL,
    impuestos DECIMAL(18,2) NOT NULL,
    total DECIMAL(18,2) NOT NULL,
    fecha_emision DATETIME NOT NULL,
    estado_dian VARCHAR(50),
    FOREIGN KEY (empresa_id) REFERENCES EMPRESA(id),
    FOREIGN KEY (cliente_id) REFERENCES CLIENTE(id)
);

CREATE TABLE DOCUMENTO_SOPORTE_LINEA (
    id INT AUTO_INCREMENT PRIMARY KEY,
    documento_soporte_id INT NOT NULL,
    producto VARCHAR(255) NOT NULL,
    cantidad DECIMAL(10,2) NOT NULL,
    precio_unitario DECIMAL(18,2) NOT NULL,
    impuestos DECIMAL(18,2),
    total DECIMAL(18,2),
    FOREIGN KEY (documento_soporte_id) REFERENCES DOCUMENTO_SOPORTE(id)
);

-- ========================================
-- TABLAS DE SEGURIDAD: USUARIOS, PERFILES, ROLES
-- ========================================
CREATE TABLE USUARIO (
    id INT AUTO_INCREMENT PRIMARY KEY,
    empresa_id INT NOT NULL,
    username VARCHAR(100) UNIQUE NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    email VARCHAR(150) UNIQUE NOT NULL,
    estado VARCHAR(50) DEFAULT 'ACTIVO',
    FOREIGN KEY (empresa_id) REFERENCES EMPRESA(id)
);

CREATE TABLE PERFIL (
    id INT AUTO_INCREMENT PRIMARY KEY,
    usuario_id INT NOT NULL,
    nombre VARCHAR(100),
    apellido VARCHAR(100),
    telefono VARCHAR(50),
    cargo VARCHAR(100),
    FOREIGN KEY (usuario_id) REFERENCES USUARIO(id)
);

CREATE TABLE ROL (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL UNIQUE,
    descripcion VARCHAR(255)
);

CREATE TABLE USUARIO_ROL (
    id INT AUTO_INCREMENT PRIMARY KEY,
    usuario_id INT NOT NULL,
    rol_id INT NOT NULL,
    FOREIGN KEY (usuario_id) REFERENCES USUARIO(id),
    FOREIGN KEY (rol_id) REFERENCES ROL(id),
    UNIQUE KEY (usuario_id, rol_id)
);
